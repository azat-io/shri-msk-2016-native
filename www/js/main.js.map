{"version":3,"sources":["main.js","indexeddb.es6","time.es6","modal.es6"],"names":["databaseOpen","callback","req","window","indexedDB","open","onupgradeneeded","e","db","target","result","transaction","onerror","databaseError","createObjectStore","keyPath","onsuccess","alarmsFound","input","document","querySelector","ul","addEventListener","onSubmit","databaseAlarmsGet","renderAllAlarms","alarm","i","length","alarmList","push","parseInt","alarmTime","replace","checkTime","time","Date","currentTime","getHours","getMinutes","checkAlarm","indexOf","ring","style","visibility","audio","play","pause","alarms","html","forEach","alarmToHtml","innerHTML","store","objectStore","keyRange","IDBKeyRange","lowerBound","cursorRequest","openCursor","data","value","console","error","preventDefault","databaseAlarmsAdd","put","timeStamp","now","oncomplete","updateTime","timeSelector","cordova","plugins","backgroundMode","setDefaults","text","enable","onactivate","setTimeout","configure","setInterval","modal","openModal","setButton","closeModal","formInput"],"mappings":"AAAA,YCsBA,SAASA,cAAcC,GACrB,GAAMC,GAAMC,OAAOC,UAAUC,KAAK,UAAW,EAE7CH,GAAII,gBAAkB,SAAUC,GAC9BC,GAAKD,EAAEE,OAAOC,OACdH,EAAEE,OAAOE,YAAYC,QAAUC,cAC/BL,GAAGM,kBAAkB,SAAWC,QAAS,eAG3Cb,EAAIc,UAAY,SAACT,GACfC,GAAKD,EAAEE,OAAOC,OACdT,KAEFC,EAAIU,QAAUC,cAKhB,QAASI,eACPC,MAAQC,SAASC,cAAc,sBAC/BC,GAAKF,SAASC,cAAc,mBAC5BD,SAASC,cAAc,gBAAgBE,iBAAiB,SAAUC,UAClEC,kBAAkBC,iBAElBD,kBAAkB,SAAUE,GAC1B,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAChCE,UAAUC,KAAKC,SAASL,EAAMC,GAAGK,UAAUC,QAAQ,IAAK,QAS9D,QAASC,aACP,GAAMC,GAAO,GAAIC,KAEjBC,cACGF,EAAKG,WAAa,GAAK,IAAM,IAAMH,EAAKG,YACxCH,EAAKI,aAAe,GAAK,IAAM,IAAMJ,EAAKI,aAE7CF,YAAcN,SAASM,aAGzB,QAASG,cACHX,UAAUY,QAAQJ,cAAgB,IAAG,WACvC,GAAIK,GAAOvB,SAASC,cAAc,QAClCsB,GAAKC,MAAMC,WAAa,UACxBC,MAAMC,OAENJ,EAAKpB,iBAAiB,QAAS,WAC7BoB,EAAKC,MAAMC,WAAa,SACxBC,MAAME,aAUZ,QAAStB,iBAAiBuB,GACxB,GAAIC,GAAO,EACXD,GAAOE,QAAQ,SAAUxB,GACvBuB,GAAQE,YAAYzB,KAEtBL,GAAG+B,UAAYH,EAGjB,QAASE,aAAazB,GACpB,MAAO,yCAAgDA,EAAMM,UAC3D,eAGJ,QAASR,mBAAmBvB,GAC1B,GAAIU,GAAcH,GAAGG,aAAa,SAAU,YACxC0C,EAAQ1C,EAAY2C,YAAY,SAEhCC,EAAWpD,OAAOqD,YAAYC,WAAW,GACzCC,EAAgBL,EAAMM,WAAWJ,GAEjCK,IACJF,GAAc1C,UAAY,SAACT,GACzB,GAAIG,GAASH,EAAEE,OAAOC,MAElBA,IACFkD,EAAK9B,KAAKpB,EAAOmD,OACjBnD,EAAAA,eAEAT,EAAS2D,IAKf,QAAS/C,eAAeN,GACtBuD,QAAQC,MAAM,kCAAmCxD,GAGnD,QAASgB,UAAUhB,GACjBA,EAAEyD,iBACFC,kBAAkB/C,MAAM2C,MAAO,WAC7BrC,kBAAkBC,iBAClBP,MAAM2C,MAAQ,GACd5C,gBAIJ,QAASgD,mBAAmBjC,EAAW/B,GACrC,GAAoB,KAAhBiB,MAAM2C,MAAc,CACtB,GAAIlD,GAAcH,GAAGG,aAAa,SAAU,aACxC0C,EAAQ1C,EAAY2C,YAAY,SAChCpD,EAAMmD,EAAMa,KACdlC,UAAWA,EACXmC,UAAW/B,KAAKgC,OAGlBzD,GAAY0D,WAAa,SAAC9D,GACxBN,KAEFC,EAAIU,QAAUC,eC/IlB,QAASyD,cACP,GAAMnC,GAAO,GAAIC,MACXmC,EAAepD,SAASC,cAAc,iBAE5CmD,GAAanB,WACVjB,EAAKG,WAAa,GAAK,IAAM,IAAMH,EAAKG,WAAa,KACrDH,EAAKI,aAAe,GAAK,IAAM,IAAMJ,EAAKI,aDN/C,GAAMM,OAAQ1B,SAASC,cAAc,eAEjCZ,GAAA,OAAIU,MAAA,OAAOG,GAAA,MAEfF,UAASG,iBAAiB,cAAe,WACvC,GAAMkD,GAAUrE,OAAOqE,OAEvBA,GAAQC,QAAQC,eAAeC,aAC7BC,KAAM,uBAGRJ,EAAQC,QAAQC,eAAeG,SAE/BL,EAAQC,QAAQC,eAAeI,WAAa,WAC1CC,WAAW,WACTP,EAAQC,QAAQC,eAAeM,WAC7BJ,KAAM,iDAEP,QAEJ,EAkBH,IAAI/C,aAeJ7B,cAAaiB,YAEb,IAAIoB,aAAA,MAyBJ4C,aAAY,WACV/C,YACAM,cACC,IEnFH,IAAM0C,OAAQ/D,SAASC,cAAc,UAC/B+D,UAAYhE,SAASC,cAAc,oBACnCgE,UAAYjE,SAASC,cAAc,uBACnCiE,WAAalE,SAASC,cAAc,gCACpCkE,UAAYnE,SAASC,cAAc,qBAEzC+D,WAAU7D,iBAAiB,QAAS,WAClC4D,MAAMvC,MAAMC,WAAa,YAG3BwC,UAAU9D,iBAAiB,QAAS,WACV,KAApBgE,UAAUzB,QACZqB,MAAMvC,MAAMC,WAAa,YAI7ByC,WAAW/D,iBAAiB,QAAS,WACnC4D,MAAMvC,MAAMC,WAAa,WDR3BqC,YAAYX,WAAY","file":"main.js","sourcesContent":["'use strict';\n\nvar audio = document.querySelector('.ring__song');\n\nvar db = void 0,\n    input = void 0,\n    ul = void 0;\n\ndocument.addEventListener('deviceready', function () {\n  var cordova = window.cordova;\n\n  cordova.plugins.backgroundMode.setDefaults({\n    text: 'Doing heavy tasks.'\n  });\n\n  cordova.plugins.backgroundMode.enable();\n\n  cordova.plugins.backgroundMode.onactivate = function () {\n    setTimeout(function () {\n      cordova.plugins.backgroundMode.configure({\n        text: 'Running in background for more than 5s now.'\n      });\n    }, 1000);\n  };\n}, false);\n\nfunction databaseOpen(callback) {\n  var req = window.indexedDB.open('alarmDB', 1);\n\n  req.onupgradeneeded = function (e) {\n    db = e.target.result;\n    e.target.transaction.onerror = databaseError;\n    db.createObjectStore('alarm', { keyPath: 'timeStamp' });\n  };\n\n  req.onsuccess = function (e) {\n    db = e.target.result;\n    callback();\n  };\n  req.onerror = databaseError;\n}\n\nvar alarmList = [];\n\nfunction alarmsFound() {\n  input = document.querySelector('.modal__form_input');\n  ul = document.querySelector('.content__alarm');\n  document.querySelector('.modal__form').addEventListener('submit', onSubmit);\n  databaseAlarmsGet(renderAllAlarms);\n\n  databaseAlarmsGet(function (alarm) {\n    for (var i = 0; i < alarm.length; i++) {\n      alarmList.push(parseInt(alarm[i].alarmTime.replace(':', '')));\n    }\n  });\n}\n\ndatabaseOpen(alarmsFound);\n\nvar currentTime = void 0;\n\nfunction checkTime() {\n  var time = new Date();\n\n  currentTime = (time.getHours() < 10 ? '0' : '') + time.getHours() + (time.getMinutes() < 10 ? '0' : '') + time.getMinutes();\n\n  currentTime = parseInt(currentTime);\n}\n\nfunction checkAlarm() {\n  if (alarmList.indexOf(currentTime) >= 0) {\n    (function () {\n      var ring = document.querySelector('.ring');\n      ring.style.visibility = 'visible';\n      audio.play();\n\n      ring.addEventListener('click', function () {\n        ring.style.visibility = 'hidden';\n        audio.pause();\n      });\n    })();\n  }\n}\n\nsetInterval(function () {\n  checkTime();\n  checkAlarm();\n}, 60 * 1000);\n\nfunction renderAllAlarms(alarms) {\n  var html = '';\n  alarms.forEach(function (alarm) {\n    html += alarmToHtml(alarm);\n  });\n  ul.innerHTML = html;\n}\n\nfunction alarmToHtml(alarm) {\n  return '<li class=\"content__alarm_elem\">' + '<span>' + alarm.alarmTime + '</span>' + '</li>';\n}\n\nfunction databaseAlarmsGet(callback) {\n  var transaction = db.transaction(['alarm'], 'readonly');\n  var store = transaction.objectStore('alarm');\n\n  var keyRange = window.IDBKeyRange.lowerBound(0);\n  var cursorRequest = store.openCursor(keyRange);\n\n  var data = [];\n  cursorRequest.onsuccess = function (e) {\n    var result = e.target.result;\n\n    if (result) {\n      data.push(result.value);\n      result.continue();\n    } else {\n      callback(data);\n    }\n  };\n}\n\nfunction databaseError(e) {\n  console.error('An IndexedDB error has occurred', e);\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  databaseAlarmsAdd(input.value, function () {\n    databaseAlarmsGet(renderAllAlarms);\n    input.value = '';\n    alarmsFound();\n  });\n}\n\nfunction databaseAlarmsAdd(alarmTime, callback) {\n  if (input.value !== '') {\n    var transaction = db.transaction(['alarm'], 'readwrite');\n    var store = transaction.objectStore('alarm');\n    var req = store.put({\n      alarmTime: alarmTime,\n      timeStamp: Date.now()\n    });\n\n    transaction.oncomplete = function (e) {\n      callback();\n    };\n    req.onerror = databaseError;\n  }\n}\n'use strict';\n\nvar modal = document.querySelector('.modal');\nvar openModal = document.querySelector('.content__button');\nvar setButton = document.querySelector('.modal__form_button');\nvar closeModal = document.querySelector('.modal__overlay_close-button');\nvar formInput = document.querySelector('.modal__form_input');\n\nopenModal.addEventListener('click', function () {\n  modal.style.visibility = 'visible';\n});\n\nsetButton.addEventListener('click', function () {\n  if (formInput.value !== '') {\n    modal.style.visibility = 'hidden';\n  }\n});\n\ncloseModal.addEventListener('click', function () {\n  modal.style.visibility = 'hidden';\n});\n'use strict';\n\nfunction updateTime() {\n  var time = new Date();\n  var timeSelector = document.querySelector('.content__time');\n\n  timeSelector.innerHTML = (time.getHours() < 10 ? '0' : '') + time.getHours() + ':' + (time.getMinutes() < 10 ? '0' : '') + time.getMinutes();\n}\n\nsetInterval(updateTime, 1000);","const audio = document.querySelector('.ring__song')\n\nlet db, input, ul\n\ndocument.addEventListener('deviceready', function () {\n  const cordova = window.cordova\n\n  cordova.plugins.backgroundMode.setDefaults({\n    text: 'Doing heavy tasks.'\n  })\n\n  cordova.plugins.backgroundMode.enable()\n\n  cordova.plugins.backgroundMode.onactivate = function () {\n    setTimeout(function () {\n      cordova.plugins.backgroundMode.configure({\n        text: 'Running in background for more than 5s now.'\n      })\n    }, 1000)\n  }\n}, false)\n\nfunction databaseOpen (callback) {\n  const req = window.indexedDB.open('alarmDB', 1)\n\n  req.onupgradeneeded = function (e) {\n    db = e.target.result\n    e.target.transaction.onerror = databaseError\n    db.createObjectStore('alarm', { keyPath: 'timeStamp' })\n  }\n\n  req.onsuccess = (e) => {\n    db = e.target.result\n    callback()\n  }\n  req.onerror = databaseError\n}\n\nlet alarmList = []\n\nfunction alarmsFound () {\n  input = document.querySelector('.modal__form_input')\n  ul = document.querySelector('.content__alarm')\n  document.querySelector('.modal__form').addEventListener('submit', onSubmit)\n  databaseAlarmsGet(renderAllAlarms)\n\n  databaseAlarmsGet(function (alarm) {\n    for (var i = 0; i < alarm.length; i++) {\n      alarmList.push(parseInt(alarm[i].alarmTime.replace(':', '')))\n    }\n  })\n}\n\ndatabaseOpen(alarmsFound)\n\nlet currentTime\n\nfunction checkTime () {\n  const time = new Date()\n\n  currentTime =\n    (time.getHours() < 10 ? '0' : '') + time.getHours() +\n    (time.getMinutes() < 10 ? '0' : '') + time.getMinutes()\n\n  currentTime = parseInt(currentTime)\n}\n\nfunction checkAlarm () {\n  if (alarmList.indexOf(currentTime) >= 0) {\n    let ring = document.querySelector('.ring')\n    ring.style.visibility = 'visible'\n    audio.play()\n\n    ring.addEventListener('click', function () {\n      ring.style.visibility = 'hidden'\n      audio.pause()\n    })\n  }\n}\n\nsetInterval(function () {\n  checkTime()\n  checkAlarm()\n}, 60 * 1000)\n\nfunction renderAllAlarms (alarms) {\n  var html = ''\n  alarms.forEach(function (alarm) {\n    html += alarmToHtml(alarm)\n  })\n  ul.innerHTML = html\n}\n\nfunction alarmToHtml (alarm) {\n  return '<li class=\"content__alarm_elem\">' + '<span>' + alarm.alarmTime +\n    '</span>' + '</li>'\n}\n\nfunction databaseAlarmsGet (callback) {\n  var transaction = db.transaction(['alarm'], 'readonly')\n  var store = transaction.objectStore('alarm')\n\n  var keyRange = window.IDBKeyRange.lowerBound(0)\n  var cursorRequest = store.openCursor(keyRange)\n\n  var data = []\n  cursorRequest.onsuccess = (e) => {\n    var result = e.target.result\n\n    if (result) {\n      data.push(result.value)\n      result.continue()\n    } else {\n      callback(data)\n    }\n  }\n}\n\nfunction databaseError (e) {\n  console.error('An IndexedDB error has occurred', e)\n}\n\nfunction onSubmit (e) {\n  e.preventDefault()\n  databaseAlarmsAdd(input.value, function () {\n    databaseAlarmsGet(renderAllAlarms)\n    input.value = ''\n    alarmsFound()\n  })\n}\n\nfunction databaseAlarmsAdd (alarmTime, callback) {\n  if (input.value !== '') {\n    let transaction = db.transaction(['alarm'], 'readwrite')\n    let store = transaction.objectStore('alarm')\n    let req = store.put({\n      alarmTime: alarmTime,\n      timeStamp: Date.now()\n    })\n\n    transaction.oncomplete = (e) => {\n      callback()\n    }\n    req.onerror = databaseError\n  }\n}\n","function updateTime () {\n  const time = new Date()\n  const timeSelector = document.querySelector('.content__time')\n\n  timeSelector.innerHTML =\n    (time.getHours() < 10 ? '0' : '') + time.getHours() + ':' +\n    (time.getMinutes() < 10 ? '0' : '') + time.getMinutes()\n}\n\nsetInterval(updateTime, 1000)\n","const modal = document.querySelector('.modal')\nconst openModal = document.querySelector('.content__button')\nconst setButton = document.querySelector('.modal__form_button')\nconst closeModal = document.querySelector('.modal__overlay_close-button')\nconst formInput = document.querySelector('.modal__form_input')\n\nopenModal.addEventListener('click', function () {\n  modal.style.visibility = 'visible'\n})\n\nsetButton.addEventListener('click', function () {\n  if (formInput.value !== '') {\n    modal.style.visibility = 'hidden'\n  }\n})\n\ncloseModal.addEventListener('click', function () {\n  modal.style.visibility = 'hidden'\n})\n"],"sourceRoot":"/source/"}